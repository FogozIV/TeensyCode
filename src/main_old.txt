
/*#include <Arduino.h>
#include <QuadEncoder.h>
#define ENCODER_USE_INTERRUPTS
#include <Encoder.h>
#include "packet/Import.h"
#include "Teensy41_AsyncTCP.h"
#include "AsyncUDP_Teensy41.h"
#include "utils/NetworkInitialiser.h"
#include "Robot.h"

#define ENCODER_1
#define ENCODER_1_CHANNEL 1
#define ENCODER_A1 0
#define ENCODER_B1 1
#define ENCODER_2
#define ENCODER_2_CHANNEL 2
#define ENCODER_A2 2
#define ENCODER_B2 3
#define ENCODER_3
#define ENCODER_3_CHANNEL 3
#define ENCODER_A3 4
#define ENCODER_B3 30
#define ENCODER_4
#define ENCODER_4_CHANNEL 4
#define ENCODER_A4 7
#define ENCODER_B4 8

#define PWM_MOT1 36
#define PWM_MOT2 33
#define DIR_MOT1 35
#define DIR_MOT2 34

#define PRINT_ENCODER(n) \
    Serial.print("Encoder "#n" value : "); \
    Serial.println(encoder##n.read());
#define PIN_MODE_ENCODER(n) \
    pinMode(INPUT, ENCODER_A##n); \
    pinMode(INPUT, ENCODER_B##n);

#define INSTANTIATE_ENCODER(count) \
    QuadEncoder encoder##count(ENCODER_##count##_CHANNEL, ENCODER_A##count, ENCODER_B##count, 0);

#define INITIATE_ENCODER(count) \
    encoder##count.setInitConfig(); \
    encoder##count.init();
*/
/*
#define INSTANTIATE_ENCODER(count) \
    Encoder encoder##count(ENCODER_A##count, ENCODER_B##count)
#define INITIATE_ENCODER(count)

#ifdef ENCODER_1
    INSTANTIATE_ENCODER(1);
#endif
#ifdef ENCODER_2
    INSTANTIATE_ENCODER(2);
#endif
#ifdef ENCODER_3
    INSTANTIATE_ENCODER(3);
#endif
#ifdef ENCODER_4
    INSTANTIATE_ENCODER(4);
#endif
*/
/*
uint32_t c_time;
int previous_state = 1;
void setup() {
    Serial.begin(256000);
    utils::network::initialiseNetwork();
    pinMode(PWM_MOT1, OUTPUT);
    pinMode(PWM_MOT2, OUTPUT);
    pinMode(DIR_MOT1, OUTPUT);
    pinMode(DIR_MOT2, OUTPUT);
    digitalWriteFast(DIR_MOT1, 1-previous_state);
    digitalWriteFast(DIR_MOT2, previous_state);
    analogWriteResolution(12);
    c_time = millis();
#ifdef ENCODER_1
    INITIATE_ENCODER(1);
#endif
#ifdef ENCODER_2
    INITIATE_ENCODER(2);
#endif
#ifdef ENCODER_3
    INITIATE_ENCODER(3);
#endif
#ifdef ENCODER_4
    INITIATE_ENCODER(4);
#endif
// write your initialization code here
}
 */
/*
void loop() {
    if(millis() - c_time >= 1000){
        c_time = millis();
        //digitalWriteFast(DIR_MOT1, previous_state);
        //digitalWriteFast(DIR_MOT2, 1-previous_state);
        encoder1.EncConfig.enableReverseDirection = previous_state;
        previous_state = 1 - previous_state;
    }
    /*
    uint16_t dt = millis() - c_time;
    analogWrite(PWM_MOT1, min((dt > 500 ? 1000-dt + 500: dt + 500)*4, 4096));
    analogWrite(PWM_MOT2, min((dt > 500 ? 1000-dt + 500: dt + 500)*4, 4096));
    */
/*
    delay(100);
    Serial.println("================");
#ifdef ENCODER_1
    PRINT_ENCODER(1);
#endif
#ifdef ENCODER_2
    PRINT_ENCODER(2);
#endif
#ifdef ENCODER_3
    PRINT_ENCODER(3);
#endif
#ifdef ENCODER_4
    PRINT_ENCODER(4);
#endif
// write your code here
}
 */